{
  "version": 3,
  "sources": ["../../../src/matchmaker/driver/interfaces.ts"],
  "sourcesContent": ["export interface SortOptions { [fieldName: string]: 1 | -1 | 'asc' | 'desc' | 'ascending' | 'descending'; }\n\nexport interface IRoomListingData {\n  clients: number;\n  locked: boolean;\n  private: boolean;\n  maxClients: number;\n  metadata: any;\n  name: string;\n  publicAddress?: string;\n  processId: string;\n  roomId: string;\n  unlisted: boolean;\n  [property: string]: any;\n}\n\nexport interface RoomListingData<Metadata= any> extends IRoomListingData {\n  metadata: Metadata;\n\n  updateOne(operations: any);\n  save();\n  remove();\n}\n\nexport interface QueryHelpers<T> {\n  then: Promise<T>['then'];\n  sort(options: SortOptions);\n}\n\nexport interface MatchMakerDriver {\n  createInstance(initialValues: any): RoomListingData;\n\n  find(\n    conditions: Partial<IRoomListingData>,\n    additionalProjectionFields?: any,\n  ): Promise<RoomListingData[]> | RoomListingData[];\n\n  findOne(conditions: Partial<IRoomListingData>): QueryHelpers<RoomListingData>;\n\n  clear(): void;\n  shutdown(): void;\n}\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
