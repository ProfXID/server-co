{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import path from \"path\";\nimport util from \"util\";\nimport blessed from \"blessed\";\nimport WebSocket from \"ws\";\n// import timer from \"timers/promises\"\nimport minimist from \"minimist\";\n\nimport * as logWriter from \"./logWriter\";\nimport { Client, Room } from \"colyseus.js\";\n\n// TODO: use \"timers/promises\" instead (drop Node.js v14)\nconst timer = {\n    setTimeout(milliseconds: number, ...args: any) {\n        return new Promise((resolve) => setTimeout(resolve, milliseconds, ...args));\n    }\n}\n\nconst argv = minimist(process.argv.slice(2));\n\n// const packageJson = import(\"../package.json\");\nconst packageJson = { name: \"@colyseus/loadtest\", version: \"0.14\" };\n\nfunction displayHelpAndExit() {\n    console.log(`${packageJson.name} v${packageJson.version}\n\nOptions:\n    --endpoint: WebSocket endpoint for all connections (default: ws://localhost:2567)\n    --room: room handler name (you can also use --roomId instead to join by id)\n    --roomId: room id (specify instead of --room)\n    [--numClients]: number of connections to open (default is 1)\n    [--delay]: delay to start each connection (in milliseconds)\n    [--project]: specify a tsconfig.json file path\n    [--reestablishAllDelay]: delay for closing and re-establishing all connections (in milliseconds)\n    [--retryFailed]: delay to retry failed connections (in milliseconds)\n    [--output]: specify an output file (default to loadtest.log)\n\nExample:\n    colyseus-loadtest example/bot.ts --endpoint ws://localhost:2567 --room state_handler`);\n    process.exit();\n\n}\n\nif (argv.help) { displayHelpAndExit(); }\n\nconst options = {\n    endpoint: argv.endpoint || `ws://localhost:2567`,\n    roomName: argv.room,\n    roomId: argv.roomId,\n    numClients: argv.numClients || 1,\n    scriptFile: argv._[0] && path.resolve(argv._[0]),\n    delay: argv.delay || 0,\n    logLevel: argv.logLevel?.toLowerCase() || \"all\", // TODO: not being used atm\n    reestablishAllDelay: argv.reestablishAllDelay || 0,\n    retryFailed: argv.retryFailed || 0,\n    output: path.resolve(argv.output || \"loadtest.log\"),\n}\n\nif (!options.scriptFile) {\n    console.error(\"❌ You must specify a script file.\");\n    console.error(\"\");\n    displayHelpAndExit();\n}\n\nconst scriptModule = import(options.scriptFile);\nconst connections: Room[] = [];\n\nif (!options.roomName && !options.roomId) {\n    console.error(\"❌ You need to specify a room with either one of the '--room' or '--roomId' options.\");\n    console.error(\"\");\n    displayHelpAndExit();\n}\n\nif (options.output) {\n    logWriter.create(options.output);\n    logWriter.write(`@colyseus/loadtest\\n${Object.keys(options)\n        .filter(key => options[key])\n        .map((key) => `${key}: ${options[key]}`).join('\\n')}`)\n}\n\nconst screen = blessed.screen({ smartCSR: true });\n\nconst headerBox = blessed.box({\n    label: ` ⚔  ${packageJson.name} ${packageJson.version} ⚔  `,\n    top: 0,\n    left: 0,\n    width: \"70%\",\n    height: 'shrink',\n    children: [\n        blessed.text({ top: 1, left: 1, tags: true, content: `{yellow-fg}endpoint:{/yellow-fg} ${options.endpoint}` }),\n        blessed.text({ top: 2, left: 1, tags: true, content: `{yellow-fg}room:{/yellow-fg} ${options.roomName ?? options.roomId}` }),\n        blessed.text({ top: 3, left: 1, tags: true, content: `{yellow-fg}serialization method:{/yellow-fg} ...` }),\n        blessed.text({ top: 4, left: 1, tags: true, content: `{yellow-fg}time elapsed:{/yellow-fg} ...` }),\n    ],\n    border: { type: 'line' },\n    style: {\n        label: { fg: 'cyan' },\n        border: { fg: 'green' }\n    }\n});\n\nconst currentStats = {\n    connected: 0,\n    failed: 0,\n};\n\nconst totalStats = {\n    connected: 0,\n    failed: 0,\n    errors: 0,\n};\n\nconst successfulConnectionBox = blessed.text({ top: 2, left: 1, tags: true, content: `{yellow-fg}connected:{/yellow-fg} ${currentStats.connected}` });\nconst failedConnectionBox = blessed.text({ top: 3, left: 1, tags: true, content: `{yellow-fg}failed:{/yellow-fg} ${currentStats.failed}` });\n\nconst clientsBox = blessed.box({\n    label: ' clients ',\n    left: \"70%\",\n    width: \"30%\",\n    height: 'shrink',\n    children: [\n        blessed.text({ top: 1, left: 1, tags: true, content: `{yellow-fg}numClients:{/yellow-fg} ${options.numClients}` }),\n        successfulConnectionBox,\n        failedConnectionBox\n    ],\n    border: { type: 'line' },\n    tags: true,\n    style: {\n        label: { fg: 'cyan' },\n        border: { fg: 'green' },\n    }\n})\n\nconst processingBox = blessed.box({\n    label: ' processing ',\n    top: 6,\n    left: \"70%\",\n    width: \"30%\",\n    height: 'shrink',\n    border: { type: 'line' },\n    children: [\n        blessed.text({ top: 1, left: 1, tags: true, content: `{yellow-fg}memory:{/yellow-fg} ...` }),\n        blessed.text({ top: 2, left: 1, tags: true, content: `{yellow-fg}cpu:{/yellow-fg} ...` }),\n        // blessed.text({ top: 1, left: 1, content: `memory: ${process.memoryUsage().heapUsed} / ${process.memoryUsage().heapTotal}` })\n    ],\n    tags: true,\n    style: {\n        label: { fg: 'cyan' },\n        border: { fg: 'green' },\n    }\n});\n\nconst networkingBox = blessed.box({\n    label: ' networking ',\n    top: 11,\n    left: \"70%\",\n    width: \"30%\",\n    border: { type: 'line' },\n    children: [\n        blessed.text({ top: 1, left: 1, tags: true, content: `{yellow-fg}bytes received:{/yellow-fg} ...` }),\n        blessed.text({ top: 2, left: 1, tags: true, content: `{yellow-fg}bytes sent:{/yellow-fg} ...` }),\n        // blessed.text({ top: 1, left: 1, content: `memory: ${process.memoryUsage().heapUsed} / ${process.memoryUsage().heapTotal}` })\n    ],\n    tags: true,\n    style: {\n        label: { fg: 'cyan' },\n        border: { fg: 'green' },\n    }\n});\n\nconst logBox = blessed.box({\n    label: ' logs ',\n    top: 7,\n    width: \"70%\",\n    padding: 1,\n    border: { type: 'line' },\n    tags: true,\n    style: {\n        label: { fg: 'cyan' },\n        border: { fg: 'green' },\n    },\n    // scroll\n    scrollable: true,\n    input: true,\n    alwaysScroll: true,\n    scrollbar: {\n        style: {\n            bg: \"green\"\n        },\n        track: {\n            bg: \"gray\"\n        }\n    },\n    keys: true,\n    vi: true,\n    mouse: true\n});\n\nscreen.key(['escape', 'q', 'C-c'], (ch, key) => beforeExit(\"SIGINT\")); // Quit on Escape, q, or Control-C.\nscreen.title = \"@colyseus/loadtest\";\nscreen.append(headerBox);\nscreen.append(clientsBox);\nscreen.append(logBox);\nscreen.append(processingBox);\nscreen.append(networkingBox);\nscreen.render();\n\nconst log = console.log;\nconst warn = console.warn;\nconst info = console.info;\nconst error = console.error;\n\nconsole.log = function(...args) {\n    logBox.content = args.map(arg => util.inspect(arg)).join(\" \") + \"\\n\" + logBox.content;\n    screen.render();\n};\nconsole.warn = function(...args) {\n    logBox.content = `{yellow-fg}${args.map(arg => util.inspect(arg)).join(\" \")}{/yellow-fg}\\n${logBox.content}`;\n    screen.render();\n};\nconsole.info = function(...args) {\n    logBox.content = `{blue-fg}${args.map(arg => util.inspect(arg)).join(\" \")}{/blue-fg}\\n${logBox.content}`;\n    screen.render();\n};\nconsole.error = function(...args) {\n    totalStats.errors++;\n    logBox.content = `{red-fg}${args.map(arg => util.inspect(arg)).join(\" \")}{/red-fg}\\n${logBox.content}`;\n    screen.render();\n};\n\nprocess.on(\"uncaughtException\", (e) => {\n    error(e);\n    process.exit();\n});\n\nlet isExiting = false;\nasync function beforeExit(signal: NodeJS.Signals, closeCode: number = 0) {\n    log(\"Writing log file...\");\n\n    if (isExiting) {\n        return;\n\n    } else {\n        isExiting = true;\n    }\n\n    const hasError = (closeCode > 0);\n\n    await logWriter.write(`Finished. Summary:\nSuccessful connections: ${totalStats.connected}\nFailed connections: ${totalStats.failed}\nTotal errors: ${totalStats.errors}`, true /* closing */)\n\n    process.exit(hasError ? 1 : 0);\n}\n\n// trap process signals\nprocess.once('exit', (code) => beforeExit(\"SIGINT\", code));\n['SIGINT', 'SIGTERM', 'SIGUSR2'].forEach((signal) =>\n    process.once(signal as NodeJS.Signals, (signal) => beforeExit(signal)));\n\nfunction formatBytes (bytes) {\n    if (bytes < 1024) {\n        return `${bytes} b`;\n\n    } else if (bytes < Math.pow(1024, 2)) {\n        return `${(bytes / 1024).toFixed(2)} kb`;\n\n    } else if (bytes < Math.pow(1024, 4)) {\n        return `${(bytes / 1024 / 1024).toFixed(2)} MB`;\n    }\n}\n\nfunction elapsedTime(inputSeconds) {\n    const days = Math.floor(inputSeconds / (60 * 60 * 24));\n    const hours = Math.floor((inputSeconds % (60 * 60 * 24)) / (60 * 60));\n    const minutes = Math.floor(((inputSeconds % (60 * 60 * 24)) % (60 * 60)) / 60);\n    const seconds = Math.floor(((inputSeconds % (60 * 60 * 24)) % (60 * 60)) % 60);\n\n    let ddhhmmss = '';\n\n    if (days > 0) { ddhhmmss += days + ' day '; }\n    if (hours > 0) { ddhhmmss += hours + ' hour '; }\n    if (minutes > 0) { ddhhmmss += minutes + ' minutes '; }\n    if (seconds > 0) { ddhhmmss += seconds + ' seconds '; }\n\n    return ddhhmmss || \"...\";\n}\n\n/**\n * Update memory / cpu usage\n */\nconst loadTestStartTime = Date.now();\nlet startTime = process.hrtime()\nlet startUsage = process.cpuUsage()\nlet bytesReceived: number = 0;\nlet bytesSent: number = 0;\nsetInterval(() => {\n    /**\n     * Program elapsed time\n     */\n    const elapsedTimeText = (headerBox.children[3] as blessed.Widgets.TextElement);\n    elapsedTimeText.content = `{yellow-fg}time elapsed:{/yellow-fg} ${elapsedTime(Math.round((Date.now() - loadTestStartTime) / 1000))}`;\n\n    /**\n     * Memory / CPU Usage\n     */\n    const memoryText = (processingBox.children[0] as blessed.Widgets.TextElement);\n    memoryText.content = `{yellow-fg}memory:{/yellow-fg} ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)} MB`;\n\n    var elapTime = process.hrtime(startTime)\n    var elapUsage = process.cpuUsage(startUsage)\n\n    var elapTimeMS = elapTime[0] * 1000 + elapTime[1] / 1000000;\n    var elapUserMS = elapUsage.user / 1000;\n    var elapSystMS = elapUsage.system / 1000;\n    var cpuPercent = (100 * (elapUserMS + elapSystMS) / elapTimeMS).toFixed(1);\n\n    const cpuText = (processingBox.children[1] as blessed.Widgets.TextElement);\n    cpuText.content = `{yellow-fg}cpu:{/yellow-fg} ${cpuPercent}%`;\n\n    screen.render();\n\n    startTime = process.hrtime()\n    startUsage = process.cpuUsage()\n\n    /**\n     * Networking\n     */\n    const bytesReceivedBox = (networkingBox.children[0] as blessed.Widgets.TextElement);\n    bytesReceivedBox.content = `{yellow-fg}bytes received:{/yellow-fg} ${formatBytes(bytesReceived)}`\n\n    const bytesSentBox = (networkingBox.children[1] as blessed.Widgets.TextElement);\n    bytesSentBox.content = `{yellow-fg}bytes sent:{/yellow-fg} ${formatBytes(bytesSent)}`\n}, 1000);\n\nfunction handleError (message) {\n    if (message) {\n        console.error(message);\n        logWriter.write(message);\n    }\n\n    currentStats.failed++;\n    totalStats.failed++;\n\n    failedConnectionBox.content = `{red-fg}failed:{/red-fg} ${currentStats.failed}`;\n    screen.render();\n}\n\nasync function connect(scripting: any, i: number) {\n    const tryReconnect = () => {\n        if (options.retryFailed > 0) {\n            setTimeout(() => connect(scripting, i), options.retryFailed);\n        }\n    };\n    const client = new Client(options.endpoint);\n\n    const clientOptions = (typeof (scripting.requestJoinOptions) === \"function\")\n        ? await scripting.requestJoinOptions.call(client, i)\n        : {};\n\n    (options.roomName ? client.joinOrCreate(options.roomName, clientOptions) : client.joinById(options.roomId, clientOptions)).then(room => {\n        connections.push(room);\n\n        // display serialization method in the UI\n        const serializerIdText = (headerBox.children[2] as blessed.Widgets.TextElement);\n        serializerIdText.content = `{yellow-fg}serialization method:{/yellow-fg} ${room.serializerId}`;\n\n        const ws: WebSocket = (room.connection.transport as any).ws;\n        ws.addEventListener('message', (event) => {\n            bytesReceived += new Uint8Array(event.data).length;\n        });\n\n        // overwrite original send function to trap sent bytes.\n        const _send = ws.send;\n        ws.send = function (data: ArrayBuffer) {\n            bytesSent += data.byteLength;\n            _send.call(ws, data);\n        }\n\n        currentStats.connected++;\n        totalStats.connected++;\n        successfulConnectionBox.content = `{yellow-fg}connected:{/yellow-fg} ${currentStats.connected}`;\n        screen.render();\n\n        room.onError.once(handleError);\n\n        room.onLeave.once((code) => {\n            currentStats.connected--;\n            successfulConnectionBox.content = `{yellow-fg}connected:{/yellow-fg} ${currentStats.connected}`;\n            screen.render();\n\n            if (code > 1000) {\n                tryReconnect();\n            }\n        });\n\n        if (scripting.onJoin) {\n            scripting.onJoin.call(room);\n        }\n\n        if (scripting.onLeave) {\n            room.onLeave(scripting.onLeave.bind(room));\n        }\n\n        if (scripting.onError) {\n            room.onError(scripting.onError.bind(room));\n        }\n\n        if (scripting.onStateChange) {\n            room.onStateChange(scripting.onStateChange.bind(room));\n        }\n    }).catch((err) => {\n        handleError(err);\n        tryReconnect();\n    });\n}\n\nasync function connectAll(scripting: any) {\n    for (let i = 0; i < options.numClients; i++) {\n        connect(scripting, i);\n\n        if (options.delay > 0) {\n            await timer.setTimeout(options.delay);\n        }\n    }\n}\n\nasync function reestablishAll(scripting: any) {\n    // drop all connections, wait for acknowledgement\n    connections.map((connection) => connection.connection.close());\n\n    // clear array\n    connections.splice(0, connections.length);\n    connections.length = 0;\n\n    // connect again\n    await connectAll(scripting);\n}\n\ntry {\n    (async () => {\n        const scripting = await scriptModule;\n        await connectAll(scripting);\n\n        if (options.reestablishAllDelay > 0) {\n            while (true) {\n                // wait for delay\n                await timer.setTimeout(options.reestablishAllDelay);\n\n                await reestablishAll(scripting);\n            }\n        }\n    })();\n\n} catch(e) {\n    error(e.stack);\n}\n"],"names":["minimist","path","logWriter.create","logWriter.write","blessed","util","Client"],"mappings":"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"}