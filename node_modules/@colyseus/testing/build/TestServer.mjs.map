{"version":3,"file":"TestServer.mjs","sources":["../src/TestServer.ts"],"sourcesContent":["import { Server, Room, matchMaker } from \"@colyseus/core\";\nimport { Client } from \"colyseus.js\";\nimport * as httpie from \"httpie\";\n\nexport class ColyseusTestServer {\n  // matchmaking methods\n  public sdk: {\n    joinOrCreate: Client['joinOrCreate'],\n    join: Client['join'],\n    create: Client['create'],\n    joinById: Client['joinById'],\n  };\n\n  public http: {\n    get: typeof httpie.get,\n    post: typeof httpie.post,\n    patch: typeof httpie.patch,\n    delete: typeof httpie.del,\n    put: typeof httpie.put,\n  };\n\n  constructor(public server: Server) {\n    const hostname = \"127.0.0.1\";\n    const port = server['port'];\n    const client = new Client(`ws://${hostname}:${port}`);\n\n    const httpEndpoint = `http://${hostname}:${port}`;\n    this.http = {\n      ['get']: (segments, opts) => httpie.get(`${httpEndpoint}${segments}`, opts),\n      ['post']: (segments, opts) => httpie.post(`${httpEndpoint}${segments}`, opts),\n      ['patch']: (segments, opts) => httpie.patch(`${httpEndpoint}${segments}`, opts),\n      ['delete']: (segments, opts) => httpie.del(`${httpEndpoint}${segments}`, opts),\n      ['put']: (segments, opts) => httpie.put(`${httpEndpoint}${segments}`, opts),\n    };\n\n    this.sdk = {\n      joinOrCreate: function() {\n        return client.joinOrCreate.apply(client, arguments);\n      },\n      join: client.join.bind(client),\n      create: client.create.bind(client),\n      joinById: client.joinById.bind(client),\n    };\n  }\n\n  async createRoom<State = any, Metadata = any>(roomName: string, clientOptions: any = {}) {\n    const room = await matchMaker.createRoom(roomName, clientOptions);\n    return this.getRoomById<State, Metadata>(room.roomId);\n  }\n\n  connectTo<T>(room: Room<T>, clientOptions: any = {}) {\n    return this.sdk.joinById<T>(room.roomId, clientOptions);\n  }\n\n  getRoomById<State = any, Metadata = any>(roomId: string) {\n    return matchMaker.getRoomById(roomId) as Room<State, Metadata>;\n  }\n\n  async cleanup() {\n    // ensure no rooms are still alive\n    await matchMaker.disconnectAll();\n\n    const driver = this.server['driver'];\n    if (driver) { await driver.clear(); }\n  }\n\n  async shutdown() {\n    await this.server.gracefullyShutdown(false);\n  }\n\n}"],"names":[],"mappings":";;;;MAIa,kBAAkB;IAiBV;;IAfZ,GAAG,CAKR;IAEK,IAAI,CAMT;IAEF,YAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAC/B,MAAM,QAAQ,GAAG,WAAW,CAAC;QAC7B,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QAC5B,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,QAAQ,QAAQ,IAAI,IAAI,EAAE,CAAC,CAAC;QAEtD,MAAM,YAAY,GAAG,UAAU,QAAQ,IAAI,IAAI,EAAE,CAAC;QAClD,IAAI,CAAC,IAAI,GAAG;YACV,CAAC,KAAK,GAAG,CAAC,QAAQ,EAAE,IAAI,KAAK,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,GAAG,QAAQ,EAAE,EAAE,IAAI,CAAC;YAC3E,CAAC,MAAM,GAAG,CAAC,QAAQ,EAAE,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,GAAG,YAAY,GAAG,QAAQ,EAAE,EAAE,IAAI,CAAC;YAC7E,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,IAAI,KAAK,MAAM,CAAC,KAAK,CAAC,GAAG,YAAY,GAAG,QAAQ,EAAE,EAAE,IAAI,CAAC;YAC/E,CAAC,QAAQ,GAAG,CAAC,QAAQ,EAAE,IAAI,KAAK,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,GAAG,QAAQ,EAAE,EAAE,IAAI,CAAC;YAC9E,CAAC,KAAK,GAAG,CAAC,QAAQ,EAAE,IAAI,KAAK,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,GAAG,QAAQ,EAAE,EAAE,IAAI,CAAC;SAC5E,CAAC;QAEF,IAAI,CAAC,GAAG,GAAG;YACT,YAAY,EAAE;gBACZ,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;aACrD;YACD,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAC9B,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;SACvC,CAAC;KACH;IAED,MAAM,UAAU,CAA8B,QAAgB,EAAE,gBAAqB,EAAE;QACrF,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,UAAU,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QAClE,OAAO,IAAI,CAAC,WAAW,CAAkB,IAAI,CAAC,MAAM,CAAC,CAAC;KACvD;IAED,SAAS,CAAI,IAAa,EAAE,gBAAqB,EAAE;QACjD,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAI,IAAI,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;KACzD;IAED,WAAW,CAA8B,MAAc;QACrD,OAAO,UAAU,CAAC,WAAW,CAAC,MAAM,CAA0B,CAAC;KAChE;IAED,MAAM,OAAO;;QAEX,MAAM,UAAU,CAAC,aAAa,EAAE,CAAC;QAEjC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACrC,IAAI,MAAM,EAAE;YAAE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;SAAE;KACtC;IAED,MAAM,QAAQ;QACZ,MAAM,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;KAC7C;;;;;"}